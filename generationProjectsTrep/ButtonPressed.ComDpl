! Variables
! ----------------------------------------------------------------------------------------------
! Create variables
int iCompare, iRowId, a, b, c, iRowsNumber, iCheckboxState, isFinished, iVoltagesNumber, iActivePowersNumber;
int iDiff;
double dActivePower, dProjectVoltage, dNodeVoltage;
set aNodes, aMainNodes, aAltNodes, aFilteredNodes;
object oMainNode, oAltNode, oNode;

! Fill them
aNodes = GetCalcRelevantObjects('*.ElmTerm');
! ----------------------------------------------------------------------------------------------

! Add project
! ----------------------------------------------------------------------------------------------
! Detect when this button is pressed
iCompare = strcmp(sButtonId, 'add');

if(iCompare = 0){
  ! Insert any element in the vector to simulate a new row
  vRows.Insert(1);
  ! Add a checkbox and set its default state
  vCheckboxes.Insert(0);
  
  ! Append voltage and active power given by the user
  input(dProjectVoltage, 'Define generation project voltage');
  input(dActivePower, 'Define generation project active power');
  
  vVoltages.Insert(dProjectVoltage);
  vActivePowers.Insert(dActivePower);
  
  ! Go through every system node to store in a new set only the ones that have the same voltage given
  ! by the user
  for(oNode = aNodes.First(); oNode; oNode = aNodes.Next()){
    dNodeVoltage = oNode:e:uknom;
    
    if(dNodeVoltage = dProjectVoltage){
      aFilteredNodes.Add(oNode);
    }
  }
  
  ! Show a menu with all the nodes with the given voltage
  aMainNodes = ShowModalSelectBrowser(aFilteredNodes, 'Select main node');
  aAltNodes = ShowModalSelectBrowser(aFilteredNodes, 'Select alternative node');
  
  ! Append the first selected node in the corresponding vector
  oMainNode = aMainNodes.First();
  oAltNode = aAltNodes.First();
  
  vMainNodes.Insert(oMainNode);
  vAltNodes.Insert(oAltNode);
}
! ----------------------------------------------------------------------------------------------

! Delete selected projects
! ----------------------------------------------------------------------------------------------
! Detect when this button is pressed
iCompare = strcmp(sButtonId, 'delete');

if(iCompare = 0){
  iRowsNumber = vRows.Size();
  iVoltagesNumber = vVoltages.Size();
  iActivePowersNumber = vActivePowers.Size();
  
  ! Add new voltages to vVoltages to match the rows number
  if(iVoltagesNumber < iRowsNumber){
    ! Find how many voltages are missing in comparison with the rows number
    iDiff = iRowsNumber - iVoltagesNumber;
    
    ! Fill those missing voltages with values of 1 kV
    for(c = 1; c <= iDiff; c += 1){
      vVoltages.Insert(1);
    }
  }
  
  ! Add new active powers to vActivePowers to match the rows number
  if(iActivePowersNumber < iRowsNumber){
    ! Find how many active powers are missing in comparison with the rows number
    iDiff = iRowsNumber - iActivePowersNumber;
    
    ! Fill those missing active powers with values of 1 MW
    for(c = 1; c <= iDiff; c += 1){
      vActivePowers.Insert(1);
    }
  }
  
  a = 1;
  b = 0;
  isFinished = 0;
  
  while(isFinished = 0){
    ! Stop loop when the index exceeds the rows number
    if(a >= iRowsNumber){
      isFinished = 1;
    }
    
    ! Get every vector's item
    iCheckboxState = vCheckboxes.Get(b);
    
    ! Remove every row and its values when its checkbox is ticked
    if(iCheckboxState = 1){
      vRows.Remove(b);
      vCheckboxes.Remove(b);
      vMainNodes.Remove(b);
      vAltNodes.Remove(b);
      vVoltages.Remove(b);
      vActivePowers.Remove(b);
    }
    
    ! Increase search space just in case the first row is not ticked
    else{
      b += 1;
    }
    
    ! Increase current index to avoid infinite loop
    a += 1;
  }
}
! ----------------------------------------------------------------------------------------------

! Select all projects
! ----------------------------------------------------------------------------------------------
! Detect when this button is pressed
iCompare = strcmp(sButtonId, 'selectAll');

if(iCompare = 0){
  ! Tick all checkboxes
  iRowsNumber = vCheckboxes.Size();
  
  for(a = 0; a < iRowsNumber; a += 1){
    vCheckboxes.Insert(a, 1);
  }
}
! ----------------------------------------------------------------------------------------------

! Deselect all projects
! ----------------------------------------------------------------------------------------------
! Detect when this button is pressed
iCompare = strcmp(sButtonId, 'deselectAll');

if(iCompare = 0){
  ! Untick all checkboxes
  iRowsNumber = vCheckboxes.Size();
  
  for(a = 0; a < iRowsNumber; a += 1){
    vCheckboxes.Insert(a, 0);
  }
}
! ----------------------------------------------------------------------------------------------

! Execute selected projects
! ----------------------------------------------------------------------------------------------
! Detect when this button is pressed
iCompare = strcmp(sButtonId, 'execute');

if(iCompare = 0){
  contingenciesSelection.Execute();
}
! ----------------------------------------------------------------------------------------------

